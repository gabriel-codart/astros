[gd_scene load_steps=6 format=3 uid="uid://c06t2nly7017u"]

[ext_resource type="Texture2D" uid="uid://c0wwt3rjfrljm" path="res://Assets/Credits/CronikaLogo.png" id="2_uni7j"]

[sub_resource type="GDScript" id="GDScript_hojyb"]
script/source = "extends Control

func _on_animation_player_animation_finished(anim_name):
	if anim_name == \"default\":
		get_tree().change_scene_to_file(\"res://UIs/main_menu.tscn\")
"

[sub_resource type="Animation" id="Animation_d4ovl"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_rq7sc"]
resource_name = "default"
length = 6.0
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.5, 2.5, 3.5, 5.5),
"transitions": PackedFloat32Array(2, 1.9, 0.5, 2),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_s5cb1"]
_data = {
"RESET": SubResource("Animation_d4ovl"),
"default": SubResource("Animation_rq7sc")
}

[node name="Opening" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_hojyb")

[node name="LogoContainer" type="BoxContainer" parent="."]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
grow_horizontal = 2
grow_vertical = 2

[node name="CronikaLogo" type="Sprite2D" parent="LogoContainer"]
scale = Vector2(0.5, 0.5)
texture = ExtResource("2_uni7j")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_s5cb1")
}
autoplay = "default"

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
